// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockPortfolioTracker.Data;

#nullable disable

namespace StockPortfolioTracker.Data.Migrations
{
    [DbContext(typeof(PortfolioTrackerDbContext))]
    [Migration("20230425100436_TableAdded")]
    partial class TableAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockPortfolioTracker.Data.PortfolioStock", b =>
                {
                    b.Property<int>("PortfolioStockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PortfolioStockId"));

                    b.Property<double>("StockBuyPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("StockSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PortfolioStockId");

                    b.HasIndex("UserId");

                    b.ToTable("PortfolioStocks", "stock");
                });

            modelBuilder.Entity("StockPortfolioTracker.Data.PortfolioTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<int>("PortfolioStockId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("SellPrice")
                        .HasColumnType("float");

                    b.HasKey("TransactionId");

                    b.HasIndex("PortfolioStockId");

                    b.ToTable("PortfolioTransactions", "stock");
                });

            modelBuilder.Entity("StockPortfolioTracker.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users", "user");
                });

            modelBuilder.Entity("StockPortfolioTracker.Data.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles", "user");
                });

            modelBuilder.Entity("StockPortfolioTracker.Data.PortfolioStock", b =>
                {
                    b.HasOne("StockPortfolioTracker.Data.User", "User")
                        .WithMany("PortfolioStocks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockPortfolioTracker.Data.PortfolioTransaction", b =>
                {
                    b.HasOne("StockPortfolioTracker.Data.PortfolioStock", "PortfolioStock")
                        .WithMany("PortfolioTransaction")
                        .HasForeignKey("PortfolioStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PortfolioStock");
                });

            modelBuilder.Entity("StockPortfolioTracker.Data.PortfolioStock", b =>
                {
                    b.Navigation("PortfolioTransaction");
                });

            modelBuilder.Entity("StockPortfolioTracker.Data.User", b =>
                {
                    b.Navigation("PortfolioStocks");
                });
#pragma warning restore 612, 618
        }
    }
}
